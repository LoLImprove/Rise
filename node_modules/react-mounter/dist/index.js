'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._isDomReady = undefined;
exports._ready = _ready;
exports._buildRootNode = _buildRootNode;
exports._getRootNode = _getRootNode;
exports.mount = mount;
exports.withOptions = withOptions;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _domready = require('domready');

var _domready2 = _interopRequireDefault(_domready);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _isDomReady = exports._isDomReady = false; /* global document*/

function _ready(cb) {
  if (_isDomReady) {
    return cb();
  }

  (0, _domready2.default)(function () {
    exports._isDomReady = _isDomReady = true;
    setTimeout(cb, 10);
  });
}

function _buildRootNode(rootId, rootProps) {
  var props = (0, _extends3.default)({}, rootProps);
  props.id = rootId;
  if (props.className) {
    props.class = props.className;
    delete props.className;
  }

  var propsString = '';
  for (var key in props) {
    if (!props.hasOwnProperty(key)) {
      continue;
    }

    var value = props[key];
    propsString += key + '="' + value + '"';
  }

  return '<div ' + propsString + '></div>';
}

function _getRootNode(rootId, rootProps) {
  var rootNode = document.getElementById(rootId);

  if (rootNode) {
    return rootNode;
  }

  var rootNodeHtml = _buildRootNode(rootId, rootProps);
  var body = document.getElementsByTagName('body')[0];
  body.insertAdjacentHTML('beforeend', rootNodeHtml);

  return document.getElementById(rootId);
}

function mount(layoutClass, regions) {
  var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];

  _ready(function () {
    var _options$rootId = options.rootId;
    var rootId = _options$rootId === undefined ? 'react-root' : _options$rootId;
    var _options$rootProps = options.rootProps;
    var rootProps = _options$rootProps === undefined ? {} : _options$rootProps;

    var rootNode = _getRootNode(rootId, rootProps);
    var el = _react2.default.createElement(layoutClass, regions);
    _reactDom2.default.render(el, rootNode);
  });
}

function withOptions(options, fn) {
  return function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    var newArgs = [].concat(args, [options]);
    return fn.apply(undefined, (0, _toConsumableArray3.default)(newArgs));
  };
}